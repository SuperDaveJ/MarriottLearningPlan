@model MILearningPlan.ViewModels.Admin.AllLevelsViewModel

@{
    ViewBag.Title = "Manage Levels";
}

<div class="admin-spacing">
    <div class="row">
        <div class="col-xs-12">
            <table id="levelsGrid" class="dataTable">
                <thead>
                    <tr>
                        <th>ID
                        <th>Dependencies
                        <th>Level
                        <th class="column-centered column-small">Archived
                        <th class="column-centered column-small"><button id="addLevel" class="btn btn-md btn-raised btn-default add-button">Add Level</button>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<div id="addEditJobAreaDialog" class="modal fade" role="dialog">
    <div class="modal-dialog modal-md">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" title="Cancel">&times;</button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body">
                @Html.Partial("_AddEditLevel")
            </div>
            <div class="modal-footer">
                <img class="popup-loading-image" src="~/images/loading2.gif" />
                <button id="addEditButton" class="btn btn-raised btn-primary">Update</button>
            </div>

        </div>
    </div>
</div>

<div class="modal fade" id="deleteJobAreaDialog" role="dialog">
    <div class="modal-dialog modal-md">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" title="Cancel">&times;</button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body">
                <form id="deleteForm">
                    @Html.Hidden("Level.LevelID")
                    @Html.Hidden("Level.Archived")
                    @Html.Hidden("Level.LevelName")
                </form>
                <div id="deleteMessage"></div>
            </div>
            <div class="modal-footer">
                <img class="popup-loading-image" src="~/images/loading2.gif" />
                <button id="deleteButton" class="btn btn-raised btn-primary">Delete</button>
            </div>

        </div>
    </div>
</div>

@section scripts {
    <script>
        var action = "";

        $(function () {

            // Load grid
            $('#levelsGrid').DataTable({
                paging: true,
                pagingType: "numbers",
                searching: false,
                ordering: false,
                info: true,
                dom: 'Blfr<t><ip>',
                sAjaxDataProp: "",
                ajax: {
                    url: "@Url.Action("GetLevels", "JobAreas", new { area = "Admin" })",
                    dataType: "json",
                    error: function (jqXHR, textStatus, errorThrown) {
                        showValidation('error', '@ViewBag.LoadError');
                    }
                },
                columns: [
                    { data: "LevelID", visible: false },
                    { data: "HasDependencies", visible: false },
                    { data: "LevelName" },
                    {
                        data: "Archived",
                        className: "dt-center",
                        render: function (val, type, row) {
                            return (val === true) ? "<span>&#10004;</span>" : "";
                        }
                    },
                    {
                        data: null,
                        className: "dt-center",
                        render: function (data) {
                            var buttons = '<button class="editor_edit btn btn-raised btn-default">Edit</button>';
                            if (data.Archived) {
                                buttons += '&nbsp; <button class="editor_unarchive btn btn-raised btn-default">Unarchive</button>';
                            }
                            else {
                                buttons += '&nbsp; <button class="editor_delete btn btn-raised btn-default">Delete</button>';
                            }
                            return buttons;
                        }
                    }
                ],
                language: {
                    emptyTable: "(No Levels were found)"
                },
                //select: "single",
                buttons: [{
                    extend: 'excel',
                    text: '<span class="export-excel-button"></span>',
                    titleAttr: 'Export to Excel',
                    exportOptions: {
                        columns: [2, 3]
                    }
                },
                {
                    extend: 'pdf',
                    text: '<span class="export-pdf-button"></span>',
                    titleAttr: 'Export to PDF',
                    exportOptions: {
                        columns: [2, 3]
                    }
                }],
                "fnDrawCallback": function () {
                    var rowsPerPage = this.fnSettings()._iDisplayLength;
                    var rowsToShow = this.fnSettings().fnRecordsDisplay();
                    if (rowsToShow <= rowsPerPage || rowsPerPage == -1) {
                        // hide pager if only 1 page
                        $('.dataTables_paginate').css('visibility', 'hidden');
                    }
                    else {
                        $('.dataTables_paginate').css('visibility', 'visible');
                    }
                }
            });

            // Add
            $('button#addLevel').on('click', function (e) {
                action = "add";
                e.preventDefault();
                $('#addEditForm input').clearErrors();

                $('#addEditForm #Level_LevelName').val('');

                $('#addEditJobAreaDialog .modal-title').text('Add New Level');
                $('button#addEditButton').text('Add');
                $('#addEditJobAreaDialog').modal('show');
            });

            // Edit
            $('#levelsGrid').on('click', 'button.editor_edit', function (e) {
                action = "edit";
                e.preventDefault();
                $('#addEditForm input').clearErrors();

                var oTable = $('#levelsGrid').dataTable();
                var row = $(this).parents("td")[0];
                var pos = oTable.fnGetPosition(row);
                $('#addEditForm #Level_LevelID').val(oTable.fnGetData(pos[0])["LevelID"]);
                $('#addEditForm #Level_Archived').val(oTable.fnGetData(pos[0])["Archived"]);
                $('#addEditForm #Level_LevelName').val(oTable.fnGetData(pos[0])["LevelName"]);

                $('#addEditJobAreaDialog .modal-title').text('Edit Level');
                $('button#addEditButton').text('Update');
                $('#addEditJobAreaDialog').modal('show');
            });

            // Delete/Archive
            $('#levelsGrid').on('click', 'button.editor_delete', function (e) {
                action = "delete";  //delete/archive
                e.preventDefault();
                $('#deleteForm input').clearErrors();

                var oTable = $('#levelsGrid').dataTable();
                var row = $(this).parents("td")[0];
                var pos = oTable.fnGetPosition(row);
                $('#deleteForm #Level_LevelID').val(oTable.fnGetData(pos[0])["LevelID"]);
                $('#deleteForm #Level_Archived').val(oTable.fnGetData(pos[0])["Archived"]);
                $('#deleteForm #Level_LevelName').val(oTable.fnGetData(pos[0])["LevelName"]);

                $('#deleteJobAreaDialog .modal-title').text('Delete Level');
                var message = 'Are you sure you want to delete the selected Level?';
                var buttonText = "Delete";
                if (oTable.fnGetData(pos[0])["HasDependencies"] === true) {
                    action = 'archive';
                    message = 'The selected Level has data associated with it and cannot be deleted.  It will be archived instead and not visible to users.';
                    $('#deleteForm #Level_Archived').val(true);
                    buttonText = "Archive";
                }
                $('#deleteMessage').text(message);
                $('button#deleteButton').text(buttonText);
                $('#deleteJobAreaDialog').modal('show');
            });

            // Unarchive
            $('#levelsGrid').on('click', 'button.editor_unarchive', function (e) {
                action = "unarchive";
                e.preventDefault();
                $('#deleteForm input').clearErrors();

                var oTable = $('#levelsGrid').dataTable();
                var row = $(this).parents("td")[0];
                var pos = oTable.fnGetPosition(row);
                $('#deleteForm #Level_LevelID').val(oTable.fnGetData(pos[0])["LevelID"]);
                $('#deleteForm #Level_Archived').val(false);
                $('#deleteForm #Level_LevelName').val(oTable.fnGetData(pos[0])["LevelName"]);

                $('#deleteJobAreaDialog .modal-title').text('Unarchive Level');
                var message = 'Unarchive the Level so it will be visible to users?';

                $('#deleteMessage').text(message);
                $('button#deleteButton').text('Unarchive');
                $('#deleteJobAreaDialog').modal('show');
            });

            $('button#addEditButton').click(function (e) {
                editorUpdateGrid('#addEditForm', '#addEditJobAreaDialog');
                return false;
            });

            $('button#deleteButton').click(function (e) {
                editorUpdateGrid('#deleteForm', '#deleteJobAreaDialog');
                return false;
            });

            // add/edit/delete grid data and show validation after editor confirm
            function editorUpdateGrid(formId, dialogId) {
                var form = $(formId);
                disableDialogButton(dialogId, true);
                $('.popup-loading-image').show();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("SaveLevelChanges", "JobAreas", new { area = "Admin" })',
                    data: form.serialize() + '&action=' + action,
                    success: function (result) {
                        resetDialog(dialogId);
                        if (result.success) {
                            $(dialogId).modal('hide');
                            var oTable = $('#levelsGrid').DataTable();
                            oTable.ajax.reload(null, false);
                            showValidation('success', result.message);
                        }
                        else if (result.error) {
                            $(dialogId).modal('hide');
                            showValidation('error', result.message);
                        }
                        else if (dialogId.indexOf('delete') === -1) {
                            // Update form with partial for ModelState errors
                            form.html(result);
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        resetDialog(dialogId);
                        $(dialogId).modal('hide');
                        showValidation('error', '@ViewBag.LoadError');
                    }
                });
            }

        });
    </script>
}